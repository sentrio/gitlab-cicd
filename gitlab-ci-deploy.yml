.sentrio_deployment:
  image: sentrio/gitlab-ci-base
  script:
    - |
      if [[ -z "SENTRIO_CLIENT_ID" || -z "SENTRIO_CLIENT_SECRET" || -z "PROJECT_ID" || -z "APPLICATION_NAME" || -z "APPLICATION_VERSION" || -z "ENVIRONMENT" ]]; then
          echo "FATAL: you must set SENTRIO_CLIENT_ID, SENTRIO_CLIENT_SECRET, PROJECT_ID, APPLICATION_NAME, APPLICATION_VERSION and ENVIRONMENT variables"
          exit 1
      fi  
    - echo $CI_PROJECT_ID
    - echo $CI_COMMIT_BEFORE_SHA
    - echo $CI_COMMIT_SHA
    - echo $CI_COMMIT_AUTHOR
    - echo $CI_COMMIT_BRANCH
    - |
      if [[ "$CI_COMMIT_BEFORE_SHA" == "0000000000000000000000000000000000000000" ]]
      then
          echo "No previous commit info"
          commits=$(git log --pretty=format:%s --no-merges $CI_COMMIT_SHA..$CI_COMMIT_SHA)
      else
          echo "Getting commits"
          commits=$(git log --pretty=format:%s --no-merges $CI_COMMIT_BEFORE_SHA..$CI_COMMIT_SHA)
      fi  
    - echo "Commit messages:$commits"
    - |
      if [[ -z "$commits" ]]; then
          taskIds=""
      else
          taskIds=$(echo $commits | grep -Eo '[A-Z]+-[0-9]+' || test $? = 1;)
      fi
    - echo "Found taskIds:$taskIds"
    - json="{\"projectId\":\"$PROJECT_ID\",\"release\":{\"application\":\"$APPLICATION_NAME\",\"version\":\"$APPLICATION_VERSION\"},\"tasks\":[]}"
    - |
      oldIFS="$IFS"
      IFS='
      '
      IFS=${IFS:0:1} # this is useful to format your code with tabs
      lines=($taskIds)
      IFS="$oldIFS" 
      for ((i = 0; i < ${#lines[@]}; ++i)); do     
          json=$(echo $json | jq '.tasks += [{"taskId":"''${lines[$i]}''","taskType":"BUG","labels":[]}]')
      done     
    - 'currentDate=$(date +"%Y-%m-%dT%H:%M:%S%:z")'
    - 'json=$(echo $json | jq ''. += {"dateTime": "''$currentDate''","environment":"''$ENVIRONMENT''","metricSource":"AUTOMATION_TOOL"}'')'
    - echo "JSON:$json"
    - curl -X POST -H 'Content-Type:application/json' -k -v -u $SENTRIO_CLIENT_ID:$SENTRIO_CLIENT_SECRET 'https://platform.sentrio.io/metrics-ingestor/api/v1/metrics/deployments' -d "$json"
